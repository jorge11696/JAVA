package VentanasGraficas;

import MisListas.*;
import ADO.*;
import Archivos.*;
import java.sql.SQLException;
import javax.swing.JOptionPane;

public class Principal extends javax.swing.JFrame {

    private ConectaBBDD conCli = new ConectaBBDD();
    private ConectaBBDD conArt = new ConectaBBDD();
    private ConectaBBDD conAut = new ConectaBBDD();
    private ConectaBBDD conAlq = new ConectaBBDD();

    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelTitulo = new javax.swing.JPanel();
        jLTitulo = new javax.swing.JLabel();
        jTabbedPanePrincipal = new javax.swing.JTabbedPane();
        jPanelTienda = new javax.swing.JPanel();
        jBAltaAutor = new javax.swing.JButton();
        jBBajaArt = new javax.swing.JButton();
        jBModArt = new javax.swing.JButton();
        jBConsultaArt = new javax.swing.JButton();
        jBAltaArt = new javax.swing.JButton();
        jBBajaAutor = new javax.swing.JButton();
        jBModAutor = new javax.swing.JButton();
        jBConsultaAutor = new javax.swing.JButton();
        jPanelCli = new javax.swing.JPanel();
        jButtonAltaCli = new javax.swing.JButton();
        jButtonBajaCli = new javax.swing.JButton();
        jButtonModCli = new javax.swing.JButton();
        jButtonConsultaCli = new javax.swing.JButton();
        jPanelAlq = new javax.swing.JPanel();
        jButtonAlquilarArt = new javax.swing.JButton();
        jButtonModificarAlquiler = new javax.swing.JButton();
        jButtonDevolverAlquiler = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuTienda = new javax.swing.JMenu();
        jMenuMantenimientoArt = new javax.swing.JMenu();
        jMenuAltaArt = new javax.swing.JMenuItem();
        jMenuBajaArt = new javax.swing.JMenuItem();
        jMenuModArt = new javax.swing.JMenuItem();
        jMenuConsultaArt = new javax.swing.JMenuItem();
        jMenuAltaAutor = new javax.swing.JMenuItem();
        jMenuBajaAutor = new javax.swing.JMenuItem();
        jMenuModAutor = new javax.swing.JMenuItem();
        jMenuConsultaAutor = new javax.swing.JMenuItem();
        jMenuClientes = new javax.swing.JMenu();
        jMenuMantenimientoCli = new javax.swing.JMenu();
        jMenuAltaCli = new javax.swing.JMenuItem();
        jMenuBajaCli = new javax.swing.JMenuItem();
        jMenuModCli = new javax.swing.JMenuItem();
        jMenuConsultaCli = new javax.swing.JMenuItem();
        JMenuAlquiler = new javax.swing.JMenu();
        jMenuAlquilarArt = new javax.swing.JMenuItem();
        jMenuModAlq = new javax.swing.JMenuItem();
        jMenuDevolverArt = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(604, 600));
        setPreferredSize(new java.awt.Dimension(604, 600));

        jLTitulo.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLTitulo.setText("GAME ADICTION ZONE");

        javax.swing.GroupLayout jPanelTituloLayout = new javax.swing.GroupLayout(jPanelTitulo);
        jPanelTitulo.setLayout(jPanelTituloLayout);
        jPanelTituloLayout.setHorizontalGroup(
            jPanelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTituloLayout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(jLTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelTituloLayout.setVerticalGroup(
            jPanelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPanePrincipal.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccione pestaña"));

        jBAltaAutor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/añadir.png"))); // NOI18N
        jBAltaAutor.setText("Alta Autor");
        jBAltaAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAltaAutorActionPerformed(evt);
            }
        });

        jBBajaArt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/elminar.png"))); // NOI18N
        jBBajaArt.setText("Baja Articulo");
        jBBajaArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBajaArtActionPerformed(evt);
            }
        });

        jBModArt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/modificar.png"))); // NOI18N
        jBModArt.setText("Modificacion Articulo");
        jBModArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBModArtActionPerformed(evt);
            }
        });

        jBConsultaArt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/lupa.png"))); // NOI18N
        jBConsultaArt.setText("Consulta \nArticulos");
        jBConsultaArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConsultaArtActionPerformed(evt);
            }
        });

        jBAltaArt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/añadir.png"))); // NOI18N
        jBAltaArt.setText("Alta Articulo");
        jBAltaArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAltaArtActionPerformed(evt);
            }
        });

        jBBajaAutor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/elminar.png"))); // NOI18N
        jBBajaAutor.setText("Baja Autor");
        jBBajaAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBajaAutorActionPerformed(evt);
            }
        });

        jBModAutor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/modificar.png"))); // NOI18N
        jBModAutor.setText("Modificacion Autor");
        jBModAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBModAutorActionPerformed(evt);
            }
        });

        jBConsultaAutor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/lupa.png"))); // NOI18N
        jBConsultaAutor.setText("Consulta  Autor");
        jBConsultaAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConsultaAutorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTiendaLayout = new javax.swing.GroupLayout(jPanelTienda);
        jPanelTienda.setLayout(jPanelTiendaLayout);
        jPanelTiendaLayout.setHorizontalGroup(
            jPanelTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTiendaLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanelTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBAltaAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBModArt)
                    .addComponent(jBAltaArt, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBModAutor))
                .addGap(110, 110, 110)
                .addGroup(jPanelTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBConsultaAutor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelTiendaLayout.createSequentialGroup()
                        .addGroup(jPanelTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBBajaArt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBConsultaArt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jBBajaAutor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(71, 71, 71))
        );
        jPanelTiendaLayout.setVerticalGroup(
            jPanelTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTiendaLayout.createSequentialGroup()
                .addGroup(jPanelTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTiendaLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jBAltaArt)
                        .addGap(2, 2, 2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTiendaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jBBajaArt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanelTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBConsultaArt)
                    .addComponent(jBModArt))
                .addGap(18, 18, 18)
                .addGroup(jPanelTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBAltaAutor)
                    .addComponent(jBBajaAutor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBModAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBConsultaAutor))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jTabbedPanePrincipal.addTab(" Tienda ", new javax.swing.ImageIcon(getClass().getResource("/Imagenes/tienda.png")), jPanelTienda); // NOI18N

        jButtonAltaCli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/añadir.png"))); // NOI18N
        jButtonAltaCli.setText("Alta Cliente");
        jButtonAltaCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAltaCliActionPerformed(evt);
            }
        });

        jButtonBajaCli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/elminar.png"))); // NOI18N
        jButtonBajaCli.setText("Baja Cliente");
        jButtonBajaCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBajaCliActionPerformed(evt);
            }
        });

        jButtonModCli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/modificar.png"))); // NOI18N
        jButtonModCli.setText("Modificacion Cliente");
        jButtonModCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModCliActionPerformed(evt);
            }
        });

        jButtonConsultaCli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/lupa.png"))); // NOI18N
        jButtonConsultaCli.setText("Consulta cliente");
        jButtonConsultaCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultaCliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCliLayout = new javax.swing.GroupLayout(jPanelCli);
        jPanelCli.setLayout(jPanelCliLayout);
        jPanelCliLayout.setHorizontalGroup(
            jPanelCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCliLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanelCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonAltaCli, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonModCli))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addGroup(jPanelCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonConsultaCli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonBajaCli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(66, 66, 66))
        );
        jPanelCliLayout.setVerticalGroup(
            jPanelCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCliLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanelCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBajaCli)
                    .addComponent(jButtonAltaCli))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(jPanelCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonModCli)
                    .addComponent(jButtonConsultaCli))
                .addGap(99, 99, 99))
        );

        jTabbedPanePrincipal.addTab(" Clientes ", new javax.swing.ImageIcon(getClass().getResource("/Imagenes/clientes.png")), jPanelCli); // NOI18N

        jButtonAlquilarArt.setText("Alquilar Articulo");
        jButtonAlquilarArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlquilarArtActionPerformed(evt);
            }
        });

        jButtonModificarAlquiler.setText("Modificar Alquiler");
        jButtonModificarAlquiler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarAlquilerActionPerformed(evt);
            }
        });

        jButtonDevolverAlquiler.setText("Devolver Articulo");
        jButtonDevolverAlquiler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDevolverAlquilerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAlqLayout = new javax.swing.GroupLayout(jPanelAlq);
        jPanelAlq.setLayout(jPanelAlqLayout);
        jPanelAlqLayout.setHorizontalGroup(
            jPanelAlqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlqLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jButtonAlquilarArt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                .addComponent(jButtonModificarAlquiler)
                .addGap(162, 162, 162))
            .addGroup(jPanelAlqLayout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addComponent(jButtonDevolverAlquiler)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelAlqLayout.setVerticalGroup(
            jPanelAlqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlqLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(jPanelAlqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAlquilarArt, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonModificarAlquiler, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addComponent(jButtonDevolverAlquiler, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(129, Short.MAX_VALUE))
        );

        jTabbedPanePrincipal.addTab(" Alquiler ", new javax.swing.ImageIcon(getClass().getResource("/Imagenes/alquilar.png")), jPanelAlq); // NOI18N

        jMenuTienda.setText("Tienda");

        jMenuMantenimientoArt.setText("Mantenimiento");

        jMenuAltaArt.setText("Alta Articulo");
        jMenuAltaArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAltaArtActionPerformed(evt);
            }
        });
        jMenuMantenimientoArt.add(jMenuAltaArt);

        jMenuBajaArt.setText("Baja Articulo");
        jMenuBajaArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuBajaArtActionPerformed(evt);
            }
        });
        jMenuMantenimientoArt.add(jMenuBajaArt);

        jMenuModArt.setText("Modificar Articulo");
        jMenuModArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuModArtActionPerformed(evt);
            }
        });
        jMenuMantenimientoArt.add(jMenuModArt);

        jMenuConsultaArt.setText("Consultar Articulos");
        jMenuConsultaArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuConsultaArtActionPerformed(evt);
            }
        });
        jMenuMantenimientoArt.add(jMenuConsultaArt);

        jMenuAltaAutor.setText("Alta Autor");
        jMenuAltaAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAltaAutorActionPerformed(evt);
            }
        });
        jMenuMantenimientoArt.add(jMenuAltaAutor);

        jMenuBajaAutor.setText("Baja Autor");
        jMenuBajaAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuBajaAutorActionPerformed(evt);
            }
        });
        jMenuMantenimientoArt.add(jMenuBajaAutor);

        jMenuModAutor.setText("Modificar Autor");
        jMenuModAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuModAutorActionPerformed(evt);
            }
        });
        jMenuMantenimientoArt.add(jMenuModAutor);

        jMenuConsultaAutor.setText("Consultar Autores");
        jMenuConsultaAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuConsultaAutorActionPerformed(evt);
            }
        });
        jMenuMantenimientoArt.add(jMenuConsultaAutor);

        jMenuTienda.add(jMenuMantenimientoArt);

        jMenuBar1.add(jMenuTienda);

        jMenuClientes.setText("Clientes");

        jMenuMantenimientoCli.setText("Mantenimiento");

        jMenuAltaCli.setText("Alta Cliente");
        jMenuAltaCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAltaCliActionPerformed(evt);
            }
        });
        jMenuMantenimientoCli.add(jMenuAltaCli);

        jMenuBajaCli.setText("Baja Cliente");
        jMenuBajaCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuBajaCliActionPerformed(evt);
            }
        });
        jMenuMantenimientoCli.add(jMenuBajaCli);

        jMenuModCli.setText("Modificacion");
        jMenuModCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuModCliActionPerformed(evt);
            }
        });
        jMenuMantenimientoCli.add(jMenuModCli);

        jMenuConsultaCli.setText("Consulta");
        jMenuConsultaCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuConsultaCliActionPerformed(evt);
            }
        });
        jMenuMantenimientoCli.add(jMenuConsultaCli);

        jMenuClientes.add(jMenuMantenimientoCli);

        jMenuBar1.add(jMenuClientes);

        JMenuAlquiler.setText("Alquiler");

        jMenuAlquilarArt.setText("Alquilar Articulo");
        jMenuAlquilarArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAlquilarArtActionPerformed(evt);
            }
        });
        JMenuAlquiler.add(jMenuAlquilarArt);

        jMenuModAlq.setText("Modificar alquiler");
        jMenuModAlq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuModAlqActionPerformed(evt);
            }
        });
        JMenuAlquiler.add(jMenuModAlq);

        jMenuDevolverArt.setText("Devolver Articulo");
        jMenuDevolverArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuDevolverArtActionPerformed(evt);
            }
        });
        JMenuAlquiler.add(jMenuDevolverArt);

        jMenuBar1.add(JMenuAlquiler);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelTitulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPanePrincipal, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPanePrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuAltaArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAltaArtActionPerformed
        AltaArticulo ventanaAltaArt = new AltaArticulo();
        ventanaAltaArt.setVisible(true);
    }//GEN-LAST:event_jMenuAltaArtActionPerformed

    private void jBConsultaArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConsultaArtActionPerformed
        String sql;
        String[] valores = {"General", "Especifica"};
        try {
            conArt.conecta();
            conArt.crearSentencia();
            sql = "SELECT * FROM articulos";
            conArt.ejecutaSQL(sql);
            if (conArt.irSiguiente()) {

                String opc = (String) JOptionPane.showInputDialog(this, "¿Busqueda especifica o general?", "Consulta de articulos", JOptionPane.QUESTION_MESSAGE, null, valores, valores[0]);
                if (opc != null) {
                    if (opc.equalsIgnoreCase("General")) {
                        MostrarArticulos ventanaMuestraArt = new MostrarArticulos();
                        ventanaMuestraArt.setVisible(true);
                    }
                    if (opc.equalsIgnoreCase("Especifica")) {
                        MostrarArticulo vmuestraArt = new MostrarArticulo();
                        vmuestraArt.setVisible(true);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de Articulos en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conArt.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jBConsultaArtActionPerformed

    private void jMenuConsultaArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuConsultaArtActionPerformed
        String sql;
        String[] valores = {"General", "Especifica"};
        try {
            conArt.conecta();
            conArt.crearSentencia();
            sql = "SELECT * FROM articulos";
            conArt.ejecutaSQL(sql);
            if (conArt.irSiguiente()) {

                String opc = (String) JOptionPane.showInputDialog(this, "¿Busqueda especifica o general?", "Consulta de articulos", JOptionPane.QUESTION_MESSAGE, null, valores, valores[0]);
                if (opc != null) {
                    if (opc.equalsIgnoreCase("General")) {
                        MostrarArticulos ventanaMuestraArt = new MostrarArticulos();
                        ventanaMuestraArt.setVisible(true);
                    }
                    if (opc.equalsIgnoreCase("Especifica")) {
                        MostrarArticulo vmuestraArt = new MostrarArticulo();
                        vmuestraArt.setVisible(true);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de Articulos en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conArt.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuConsultaArtActionPerformed

    private void jBBajaArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBajaArtActionPerformed
        String sql;
        try {
            conArt.conecta();
            conArt.crearSentencia();
            sql = "SELECT * FROM articulos";
            conArt.ejecutaSQL(sql);
            if (conArt.irSiguiente()) {
                BajaArticulo ventanaBajaArt = new BajaArticulo();
                ventanaBajaArt.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de Articulos en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conArt.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jBBajaArtActionPerformed

    private void jMenuBajaArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuBajaArtActionPerformed
        String sql;
        try {
            conArt.conecta();
            conArt.crearSentencia();
            sql = "SELECT * FROM articulos";
            conArt.ejecutaSQL(sql);
            if (conArt.irSiguiente()) {
                BajaArticulo ventanaBajaArt = new BajaArticulo();
                ventanaBajaArt.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de Articulos en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conArt.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_jMenuBajaArtActionPerformed

    private void jBModArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBModArtActionPerformed
        String sql;
        try {
            conArt.conecta();
            conArt.crearSentencia();
            sql = "SELECT * FROM articulos";
            conArt.ejecutaSQL(sql);
            if (conArt.irSiguiente()) {
                ModificarArticulo ventanaModArt = new ModificarArticulo();
                ventanaModArt.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de Articulos en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conArt.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jBModArtActionPerformed

    private void jMenuModArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuModArtActionPerformed
        String sql;
        try {
            conArt.conecta();
            conArt.crearSentencia();
            sql = "SELECT * FROM articulos";
            conArt.ejecutaSQL(sql);
            if (conArt.irSiguiente()) {
                ModificarArticulo ventanaModArt = new ModificarArticulo();
                ventanaModArt.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de Articulos en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conArt.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_jMenuModArtActionPerformed

    private void jButtonAltaCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAltaCliActionPerformed
        AltaCliente ventanaAltaCli = new AltaCliente();
        ventanaAltaCli.setVisible(true);
    }//GEN-LAST:event_jButtonAltaCliActionPerformed

    private void jMenuAltaCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAltaCliActionPerformed
        AltaCliente ventanaAltaCli = new AltaCliente();
        ventanaAltaCli.setVisible(true);
    }//GEN-LAST:event_jMenuAltaCliActionPerformed

    private void jButtonConsultaCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultaCliActionPerformed
        String sql;
        String[] valores = {"General", "Especifica"};
        String opc = (String) JOptionPane.showInputDialog(this, "¿Busqueda especifica o general?", "Consulta de Clientes", JOptionPane.QUESTION_MESSAGE, null, valores, valores[0]);
        try {
            conCli.conecta();
            conCli.crearSentencia();
            sql = "SELECT * FROM clientes";
            conCli.ejecutaSQL(sql);
            if (conCli.irSiguiente()) {
                if (opc != null) {
                    if (opc.equalsIgnoreCase("General")) {

                        MostrarClientes ventanaMuestraClientes = new MostrarClientes();
                        ventanaMuestraClientes.setVisible(true);

                    }
                    if (opc.equalsIgnoreCase("Especifica")) {

                        MostrarCliente vmuestraCliente = new MostrarCliente();
                        vmuestraCliente.setVisible(true);

                    }

                }
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de clientes en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conCli.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButtonConsultaCliActionPerformed

    private void jMenuConsultaCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuConsultaCliActionPerformed
        String sql;
        String[] valores = {"General", "Especifica"};
        String opc = (String) JOptionPane.showInputDialog(this, "¿Busqueda especifica o general?", "Consulta de Clientes", JOptionPane.QUESTION_MESSAGE, null, valores, valores[0]);
        try {
            conCli.conecta();
            conCli.crearSentencia();
            sql = "SELECT * FROM clientes";
            conCli.ejecutaSQL(sql);
            if (conCli.irSiguiente()) {
                if (opc != null) {
                    if (opc.equalsIgnoreCase("General")) {

                        MostrarClientes ventanaMuestraClientes = new MostrarClientes();
                        ventanaMuestraClientes.setVisible(true);
                    }
                    if (opc.equalsIgnoreCase("Especifica")) {

                        MostrarCliente vmuestraCliente = new MostrarCliente();
                        vmuestraCliente.setVisible(true);
                    }

                }
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de clientes en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conCli.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuConsultaCliActionPerformed

    private void jButtonModCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModCliActionPerformed
        String sql;
        try {
            conCli.conecta();
            conCli.crearSentencia();
            sql = "SELECT * FROM clientes";
            conCli.ejecutaSQL(sql);
            if (conCli.irSiguiente()) {
                ModificarCliente ventanaModCli = new ModificarCliente();
                ventanaModCli.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de clientes en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conCli.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButtonModCliActionPerformed

    private void jMenuModCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuModCliActionPerformed
        String sql;
        try {
            conCli.conecta();
            conCli.crearSentencia();
            sql = "SELECT * FROM clientes";
            conCli.ejecutaSQL(sql);
            if (conCli.irSiguiente()) {
                ModificarCliente ventanaModCli = new ModificarCliente();
                ventanaModCli.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de clientes en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conCli.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuModCliActionPerformed

    private void jMenuBajaCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuBajaCliActionPerformed
        String sql;
        try {
            conCli.conecta();
            conCli.crearSentencia();
            sql = "SELECT * FROM clientes";
            conCli.ejecutaSQL(sql);
            if (conCli.irSiguiente()) {
                BajaCliente ventanaBajaCli = new BajaCliente();
                ventanaBajaCli.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de clientes en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conCli.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuBajaCliActionPerformed

    private void jButtonBajaCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBajaCliActionPerformed
        String sql;
        try {
            conCli.conecta();
            conCli.crearSentencia();
            sql = "SELECT * FROM clientes";
            conCli.ejecutaSQL(sql);
            if (conCli.irSiguiente()) {
                BajaCliente ventanaBajaCli = new BajaCliente();
                ventanaBajaCli.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de clientes en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conCli.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_jButtonBajaCliActionPerformed

    private void jButtonAlquilarArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlquilarArtActionPerformed

        AlquilerArticulo ventanaAlqArt = new AlquilerArticulo();
        ventanaAlqArt.setVisible(true);

    }//GEN-LAST:event_jButtonAlquilarArtActionPerformed

    private void jMenuAlquilarArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAlquilarArtActionPerformed

        AlquilerArticulo ventanaAlqArt = new AlquilerArticulo();
        ventanaAlqArt.setVisible(true);

    }//GEN-LAST:event_jMenuAlquilarArtActionPerformed

    private void jButtonModificarAlquilerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarAlquilerActionPerformed
        String sql;
        try {
            conAlq.conecta();
            conAlq.crearSentencia();
            sql = "SELECT * FROM alquiler";
            conAlq.ejecutaSQL(sql);
            if (conAlq.irSiguiente()) {
                ModificarAlquiler ventanaModAlq = new ModificarAlquiler();
                ventanaModAlq.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de ningun articulo alquilado en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conAlq.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButtonModificarAlquilerActionPerformed

    private void jMenuModAlqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuModAlqActionPerformed
        String sql;
        try {
            conAlq.conecta();
            conAlq.crearSentencia();
            sql = "SELECT * FROM alquiler";
            conAlq.ejecutaSQL(sql);
            if (conAlq.irSiguiente()) {
                ModificarAlquiler ventanaModAlq = new ModificarAlquiler();
                ventanaModAlq.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de ningun articulo alquilado en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conAlq.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuModAlqActionPerformed

    private void jButtonDevolverAlquilerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDevolverAlquilerActionPerformed
        String sql;
        try {
            conAlq.conecta();
            conAlq.crearSentencia();
            sql = "SELECT * FROM alquiler";
            conAlq.ejecutaSQL(sql);
            if (conAlq.irSiguiente()) {
                DevolverAlquiler ventanaDevAlq = new DevolverAlquiler();
                ventanaDevAlq.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de ningun articulo alquilado en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conAlq.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButtonDevolverAlquilerActionPerformed

    private void jMenuDevolverArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuDevolverArtActionPerformed
        String sql;
        try {
            conAlq.conecta();
            conAlq.crearSentencia();
            sql = "SELECT * FROM alquiler";
            conAlq.ejecutaSQL(sql);
            if (conAlq.irSiguiente()) {
                DevolverAlquiler ventanaDevAlq = new DevolverAlquiler();
                ventanaDevAlq.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de ningun articulo alquilado en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conAlq.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuDevolverArtActionPerformed

    private void jBAltaArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAltaArtActionPerformed
        AltaArticulo ventanaAltaArt = new AltaArticulo();
        ventanaAltaArt.setVisible(true);
    }//GEN-LAST:event_jBAltaArtActionPerformed

    private void jBAltaAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAltaAutorActionPerformed
        String info = "Buscar";
        AltaAutor ventanaAltaAut = new AltaAutor(info);
        ventanaAltaAut.setVisible(true);
    }//GEN-LAST:event_jBAltaAutorActionPerformed

    private void jMenuAltaAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAltaAutorActionPerformed
        String info = "Buscar";
        AltaAutor ventanaAltaAut = new AltaAutor(info);
        ventanaAltaAut.setVisible(true);
    }//GEN-LAST:event_jMenuAltaAutorActionPerformed

    private void jBBajaAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBajaAutorActionPerformed
        String sql;
        try {
            conAut.conecta();
            conAut.crearSentencia();
            sql = "SELECT * FROM autores";
            conAut.ejecutaSQL(sql);
            if (conAut.irSiguiente()) {
                BajaAutor ventanaBajaAut = new BajaAutor();
                ventanaBajaAut.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de Autores en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conAut.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jBBajaAutorActionPerformed

    private void jMenuBajaAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuBajaAutorActionPerformed
        String sql;
        try {
            conAut.conecta();
            conAut.crearSentencia();
            sql = "SELECT * FROM autores";
            conAut.ejecutaSQL(sql);
            if (conAut.irSiguiente()) {
                BajaAutor ventanaBajaAut = new BajaAutor();
                ventanaBajaAut.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de Autores en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conAut.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuBajaAutorActionPerformed

    private void jBModAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBModAutorActionPerformed
        String sql;
        try {
            conAut.conecta();
            conAut.crearSentencia();
            sql = "SELECT * FROM autores";
            conAut.ejecutaSQL(sql);
            if (conAut.irSiguiente()) {
                ModificarAutor ventanaModAut = new ModificarAutor();
                ventanaModAut.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de Autores en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conAut.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jBModAutorActionPerformed

    private void jMenuModAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuModAutorActionPerformed
        String sql;
        try {
            conAut.conecta();
            conAut.crearSentencia();
            sql = "SELECT * FROM autores";
            conAut.ejecutaSQL(sql);
            if (conAut.irSiguiente()) {
                ModificarAutor ventanaModAut = new ModificarAutor();
                ventanaModAut.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de Autores en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conAut.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuModAutorActionPerformed

    private void jBConsultaAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConsultaAutorActionPerformed
        String[] valores = {"General", "Especifica"};
        String sql;
        try {
            conAut.conecta();
            conAut.crearSentencia();
            sql = "SELECT * FROM autores";
            conAut.ejecutaSQL(sql);
            if (conAut.irSiguiente()) {
                String opc = (String) JOptionPane.showInputDialog(this, "¿Busqueda especifica o general?", "Consulta de Clientes", JOptionPane.QUESTION_MESSAGE, null, valores, valores[0]);
                if (opc != null) {
                    if (opc.equalsIgnoreCase("General")) {
                        MostrarAutores ventanaMuestraAutores = new MostrarAutores();
                        ventanaMuestraAutores.setVisible(true);
                    }
                    if (opc.equalsIgnoreCase("Especifica")) {
                        MostrarAutor vmuestraAutor = new MostrarAutor();
                        vmuestraAutor.setVisible(true);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de Autores en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conAut.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jBConsultaAutorActionPerformed

    private void jMenuConsultaAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuConsultaAutorActionPerformed
        String[] valores = {"General", "Especifica"};
        String sql;
        try {
            conAut.conecta();
            conAut.crearSentencia();
            sql = "SELECT * FROM autores";
            conAut.ejecutaSQL(sql);
            if (conAut.irSiguiente()) {
                String opc = (String) JOptionPane.showInputDialog(this, "¿Busqueda especifica o general?", "Consulta de Clientes", JOptionPane.QUESTION_MESSAGE, null, valores, valores[0]);
                if (opc != null) {
                    if (opc.equalsIgnoreCase("General")) {
                        MostrarAutores ventanaMuestraAutores = new MostrarAutores();
                        ventanaMuestraAutores.setVisible(true);
                    }
                    if (opc.equalsIgnoreCase("Especifica")) {
                        MostrarAutor vmuestraAutor = new MostrarAutor();
                        vmuestraAutor.setVisible(true);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "No disponemos de Autores en nuestra BBDD!", "Atención!", JOptionPane.ERROR_MESSAGE);
            }
            conAut.cerrarConexion();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuConsultaAutorActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu JMenuAlquiler;
    private javax.swing.JButton jBAltaArt;
    private javax.swing.JButton jBAltaAutor;
    private javax.swing.JButton jBBajaArt;
    private javax.swing.JButton jBBajaAutor;
    private javax.swing.JButton jBConsultaArt;
    private javax.swing.JButton jBConsultaAutor;
    private javax.swing.JButton jBModArt;
    private javax.swing.JButton jBModAutor;
    private javax.swing.JButton jButtonAlquilarArt;
    private javax.swing.JButton jButtonAltaCli;
    private javax.swing.JButton jButtonBajaCli;
    private javax.swing.JButton jButtonConsultaCli;
    private javax.swing.JButton jButtonDevolverAlquiler;
    private javax.swing.JButton jButtonModCli;
    private javax.swing.JButton jButtonModificarAlquiler;
    private javax.swing.JLabel jLTitulo;
    private javax.swing.JMenuItem jMenuAlquilarArt;
    private javax.swing.JMenuItem jMenuAltaArt;
    private javax.swing.JMenuItem jMenuAltaAutor;
    private javax.swing.JMenuItem jMenuAltaCli;
    private javax.swing.JMenuItem jMenuBajaArt;
    private javax.swing.JMenuItem jMenuBajaAutor;
    private javax.swing.JMenuItem jMenuBajaCli;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuClientes;
    private javax.swing.JMenuItem jMenuConsultaArt;
    private javax.swing.JMenuItem jMenuConsultaAutor;
    private javax.swing.JMenuItem jMenuConsultaCli;
    private javax.swing.JMenuItem jMenuDevolverArt;
    private javax.swing.JMenu jMenuMantenimientoArt;
    private javax.swing.JMenu jMenuMantenimientoCli;
    private javax.swing.JMenuItem jMenuModAlq;
    private javax.swing.JMenuItem jMenuModArt;
    private javax.swing.JMenuItem jMenuModAutor;
    private javax.swing.JMenuItem jMenuModCli;
    private javax.swing.JMenu jMenuTienda;
    private javax.swing.JPanel jPanelAlq;
    private javax.swing.JPanel jPanelCli;
    private javax.swing.JPanel jPanelTienda;
    private javax.swing.JPanel jPanelTitulo;
    private javax.swing.JTabbedPane jTabbedPanePrincipal;
    // End of variables declaration//GEN-END:variables
}
